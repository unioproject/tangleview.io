"use strict";const c=document.getElementById("canvas"),ctx=!!c&&c.getContext("2d"),tooltip=document.getElementById("tooltip"),offsetWidth=200,offsetHeight=75,cWidth=ctx?c.width-200:0,margin=110,pxSize=10,txPerLine=Math.ceil(cWidth/10),tickRate=1e3,textColor="#000000",strokeColorNorm="#cccccc",strokeColorSelect="#ff0000",fontFace="Consolas",fontSizeHeader="13px",fontSizeAxis="11px";let txAmountToPoll=1e4,maxTransactions=1e4;const coordinator="EQSAUZXULTTYZCLNJNTXQTQHOMOFZERHTCG",pxColorUnconf={r:0,g:0,b:0,a:1},pxColorConf={r:0,g:255,b:0,a:1},pxColorReattach={r:255,g:255,b:0,a:1},pxColorMilestone={r:0,g:0,b:255,a:1};let txList=[],filterForValueTX=!1,filterForSpecificAddresses=[],filterAddress="",manualPoll=!1,endlessMode=!1,selectedAddress="",selectedAddressBuffer="",totalConfRate=0,totalConfRateEff=0,totalConfirmations=[],milestoneMetrics=[],milestoneIntervalList=[],milestoneInterval=0,totalConfirmationTime=0,totalTransactions=0,totalTPS=0,totalCTPS=0,totalTPSeff=0,totalCTPSeff=0,effectiveConfRateIndex=0,topList=[],toplistAdditional=0,topListCount=15,toplistSortIndex=[2,"desc"],toplistMinTX=1,mousePos,pixelMap=[],timer=[],rateLimiter=0,txOfMousePosition={};const tangle=new tangleview({}),ChangeAddress=()=>{selectedAddress=document.getElementById("address_input").value.substring(0,81),selectedAddressBuffer=document.getElementById("address_input").value.substring(0,81)};document.getElementById("address_button")&&(document.getElementById("address_button").onclick=()=>{ChangeAddress(),drawGraph({loop:!1})});const getRowPosition=el=>({left:(el=el.getBoundingClientRect()).left+window.scrollX,top:el.top+window.scrollY}),createTable=currentList=>{const currentListLength=(currentList=_.orderBy(currentList,listItem=>listItem[toplistSortIndex[0]][0],[toplistSortIndex[1]])).length,mytable=document.getElementById("toplist");mytable.innerHTML="";const tablehead=document.createElement("thead"),tablebody=document.createElement("tbody"),head_tr=document.createElement("tr"),hideSpecificAddressCheckboxWrapper=document.getElementById("hideSpecificAddressCheckboxWrapper");if(hideSpecificAddressCheckboxWrapper&&hideSpecificAddressCheckboxWrapper.classList.add("hide"),currentList.length>0){for(let j=0;j<currentListLength;j++){const current_row=document.createElement("tr");current_row.addEventListener("mouseenter",()=>{filterAddress=current_row.getAttribute("tx");const listPosition=getRowPosition(current_row);hideSpecificAddressCheckboxWrapper&&(hideSpecificAddressCheckboxWrapper.style.top=`${listPosition.top+1}px`,hideSpecificAddressCheckboxWrapper.style.left=`${listPosition.left-20}px`,hideSpecificAddressCheckboxWrapper.classList.remove("hide"))},!1);for(let i=0;i<currentList[0].length;i++){const current_cell=document.createElement("td");let currenttext;switch(current_cell.addEventListener("click",()=>{selectedAddress=current_cell.getAttribute("tx"),selectedAddressBuffer=current_cell.getAttribute("tx"),document.getElementById("address_input").value=current_cell.getAttribute("tx"),drawGraph({loop:!1})},!1),i){case 0:currenttext=`${j+1}`;break;case 1:currenttext=`${currentList[j][1].substring(0,35)===coordinator?"[COO]"+coordinator.substring(0,30):currentList[j][1].substring(0,35)}...`;break;case 2:currenttext=`${currentList[j][2]} [${Math.round(parseInt(currentList[j][2])/maxTransactions*100)}%]`;break;case 3:currenttext=`${currentList[j][3][0]} [${currentList[j][3][1]<100?currentList[j][3][1].toFixed(1):currentList[j][3][1].toFixed(0)}%]`;break;case 4:currenttext=`${currentList[j][4][0]} [${currentList[j][4][1]<100?currentList[j][4][1].toFixed(1):currentList[j][4][1].toFixed(0)}%]`;break;case 5:currenttext=`${currentList[j][5][0]===1/0?"inf.":currentList[j][5][0].toFixed(2)}`;break;case 6:currenttext=`${currentList[j][6][0]===1/0?"inf.":currentList[j][6][0]>0?"+":""}${currentList[j][6][0]<1/0?currentList[j][6][0].toFixed(0)+"%":""}`;break;case 7:currenttext=`${currentList[j][7][0].toFixed(2)}`;break;case 8:currenttext=`${currentList[j][8][0].toFixed(2)}`;break;case 9:currenttext=currentList[j][9][0]?`${currentList[j][9][0].toFixed(1)} min`:"n/a";break;case 10:currenttext=currentList[j][10][0]?`${currentList[j][10][0]>0?"+":""}${currentList[j][10][0].toFixed(1)}%`:"n/a";break;default:currenttext="N/A"}const currenttextNode=document.createTextNode(currenttext);current_cell.appendChild(currenttextNode),current_cell.setAttribute("tx",currentList[j][1]),current_row.setAttribute("tx",currentList[j][1]),currentList[j][6][0]>=0&&6==i?current_cell.setAttribute("style","color: #008000"):currentList[j][6][0]<0&&6==i?current_cell.setAttribute("style","color: #ff0000"):currentList[j][10][0]>=0&&10==i?current_cell.setAttribute("style","color: #ff0000"):currentList[j][10][0]<0&&10==i&&current_cell.setAttribute("style","color: #008000"),current_row.appendChild(current_cell)}tablebody.appendChild(current_row)}for(let i=0;i<currentList[0].length;i++){const current_cell=document.createElement("td"),img=document.createElement("img");let currenttext;switch(img.setAttribute("src","img/sort.png"),img.classList.add("table_head_sortpic"),i){case 0:currenttext="#";break;case 1:currenttext="Address";break;case 2:currenttext="Total";break;case 3:currenttext="Confirmed";break;case 4:currenttext="Unconfirmed";break;case 5:currenttext="C.Ratio";break;case 6:currenttext="±Avg.C.Ratio";break;case 7:currenttext="TPS";break;case 8:currenttext="CTPS";break;case 9:currenttext="~C.Time";break;case 10:currenttext="±Avg.Time";break;default:currenttext="N/A"}const currenttextNode=document.createTextNode(currenttext);current_cell.appendChild(currenttextNode),i>0&&current_cell.appendChild(img),head_tr.appendChild(current_cell),current_cell.addEventListener("click",()=>{toplistSortIndex=i===toplistSortIndex[0]&&"desc"===toplistSortIndex[1]?[i,"asc"]:[i,"desc"],createTable(topList)},!1)}tablehead.appendChild(head_tr),mytable.appendChild(tablehead),mytable.appendChild(tablebody)}},GetMousePos=(c,evt)=>{if(null==evt.pageX&&null!=evt.clientX){let doc=document.documentElement,body=document.body;evt.pageX=evt.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0),evt.pageY=evt.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc.clientTop||0)}let rect=c.getBoundingClientRect();return{x:evt.clientX-rect.left,y:evt.clientY-rect.top,xReal:evt.pageX,yReal:evt.pageY}},GetTXofMousePosition=mousePosition=>{mousePosition.y=mousePosition.y-75,mousePosition.x=mousePosition.x-110;const txAtMouse=pixelMap.reduce((acc,tx)=>(mousePosition.x>=tx.x&&mousePosition.x<tx.x+10&&mousePosition.y>=tx.y&&mousePosition.y<tx.y+10&&(acc=tx),acc),0);return txAtMouse},OpenLink=tx=>{tx&&window.open(`https://thetangle.org/address/${tx}`),txOfMousePosition.hash&&window.open(`https://thetangle.org/transaction/${txOfMousePosition.hash}`)};let lastTxMousoverBuffer="";c&&c.addEventListener("mousemove",evt=>{const now=Date.now();if(mousePos=GetMousePos(c,evt),txOfMousePosition=GetTXofMousePosition(mousePos),now-rateLimiter>5){if(txOfMousePosition.hash){lastTxMousoverBuffer!==txOfMousePosition.hash&&(lastTxMousoverBuffer=txOfMousePosition.hash,drawGraph({loop:!1}));let txConfirmationTime=_.round((txOfMousePosition.ctime-txOfMousePosition.receivedAt)/1e3/60,2);txConfirmationTime=txOfMousePosition.confirmed?`${txConfirmationTime} Minutes`:txOfMousePosition.reattached?"Reattached transaction":"Not confirmed yet",tooltip.innerHTML=`Address: ${txOfMousePosition.address}<br>\n                                TX Hash: ${txOfMousePosition.hash}<br>\n                                Bundle:  ${txOfMousePosition.bundle}<br>\n                                Tag:     ${txOfMousePosition.tag}<br>\n                                C. Time: ${txConfirmationTime}<br>\n                                Value:   ${0!==txOfMousePosition.value?(txOfMousePosition.value/1e6).toPrecision()+" MIOTA":"Zero value transaction"}`,selectedAddress=txOfMousePosition.address,tooltip.style.display="block",tooltip.style.top=`${mousePos.yReal+15}px`,tooltip.style.left=`${mousePos.xReal+15}px`,document.body.style.cursor="pointer"}else tooltip.style.display="none",document.body.style.cursor="auto",txOfMousePosition={},selectedAddress="";rateLimiter=Date.now()}},!1),c&&c.addEventListener("mouseout",()=>{tooltip.style.display="none",document.body.style.cursor="auto",txOfMousePosition={},selectedAddress=selectedAddressBuffer,drawGraph({loop:!1})},!1);const netselector=document.getElementById("netselector"),netSwitch=()=>{window.location.replace(`https://${"mainnet"===netselector.value?"www":netselector.value}.tanglemonitor.com`)};netselector&&netselector.addEventListener("change",netSwitch),document.getElementById("address_button_reset")&&document.getElementById("address_button_reset").addEventListener("click",()=>{selectedAddress="",selectedAddressBuffer="",document.getElementById("address_input").value="",drawGraph({loop:!1})},!1);const checkBoxZero=document.getElementById("hideZero");checkBoxZero&&document.getElementById("hideZero").addEventListener("click",()=>{filterForValueTX=!(!checkBoxZero||!0!==checkBoxZero.checked),drawGraph({loop:!1}),CalcToplist(!1)},!1),document.getElementById("hideSpecificAddressCheckboxWrapper")&&document.getElementById("hideSpecificAddressCheckboxWrapper").addEventListener("click",()=>{filterForSpecificAddresses.push(filterAddress),drawGraph({loop:!1}),CalcToplist(!1)},!1);let maxTransactionsBuffer=maxTransactions;const checkBoxEndless=document.getElementById("endlessMode");checkBoxEndless&&document.getElementById("endlessMode").addEventListener("click",()=>{checkBoxEndless&&!0===checkBoxEndless.checked?(endlessMode=!0,maxTransactionsBuffer=maxTransactions,maxTransactions=1e13):(endlessMode=!1,maxTransactions=maxTransactionsBuffer)},!1),checkBoxZero&&(checkBoxZero.checked=!1),checkBoxEndless&&(checkBoxEndless.checked=!1),c&&c.addEventListener("click",()=>{OpenLink(!1)},!1),document.getElementById("toplist-more")&&document.getElementById("toplist-more").addEventListener("click",()=>{toplistAdditional+=5,CalcToplist(!1)},!1),document.getElementById("toplist-all")&&document.getElementById("toplist-all").addEventListener("click",()=>{toplistAdditional=1e4,CalcToplist(!1)},!1),document.getElementById("toplist-reset")&&document.getElementById("toplist-reset").addEventListener("click",()=>{topListCount=15,toplistAdditional=0,CalcToplist(!1)},!1),document.getElementById("minNumberOfTxIncluded_button")&&document.getElementById("minNumberOfTxIncluded_button").addEventListener("click",()=>{toplistMinTX=parseInt(document.getElementById("minNumberOfTxIncluded").value),CalcToplist(!1)},!1),document.getElementById("txToPollWrapper_button")&&document.getElementById("txToPollWrapper_button").addEventListener("click",()=>{txAmountToPoll=parseInt(document.getElementById("txToPoll").value),document.getElementById("loadingTX")&&(document.getElementById("loadingTX").classList.remove("hide"),document.getElementById("loadingTX").classList.add("inline_block")),manualPoll=!0,maxTransactions=txAmountToPoll},!1);const calcLineCount=(i,pxSize,cWidth)=>{const lines=Math.floor(i*pxSize/cWidth);return lines},drawGraph=async params=>{for(ctx.clearRect(0,0,cWidth+200,c.height);c.height<10*timer.length*2+75+30;)c.height=c.height+50;let pxls=[];ctx.font="13px Consolas",ctx.fillStyle="#000000",ctx.textBaseline="hanging",ctx.textAlign="left",ctx.fillText("Total TX count        "+totalTransactions,120,10),ctx.fillText("Avg. TPS              "+totalTPS,120,25),ctx.fillText("Avg. conf.ratio       "+totalConfRate+" %",120,40),ctx.fillText("Avg. eff. conf.ratio  "+totalConfRateEff+" %",120,55),ctx.fillText("Avg. conf. time   "+totalConfirmationTime+" min",350,10),ctx.fillText("Avg. CTPS         "+totalCTPS,350,25),ctx.fillText("Avg. MS interval  "+milestoneInterval+" min",350,40),ctx.fillText("Unconfirmed",cWidth-60,10),ctx.fillText("Confirmed",cWidth-60,25),ctx.fillText("Reattached",cWidth+40,10),ctx.fillText("Milestone",cWidth+40,25),ctx.fillText("Avg.conf.time indicator",cWidth-60+5,40),ctx.fillStyle="rgba(0,0,0,1)",ctx.fillRect(cWidth-75,10,10,10),ctx.fillStyle="rgba(0,255,0,1)",ctx.fillRect(cWidth-75,25,10,10),ctx.fillStyle="rgba(255,255,0,1)",ctx.fillRect(cWidth+25,10,10,10),ctx.fillStyle="rgba(0,0,255,1)",ctx.fillRect(cWidth+25,25,10,10),ctx.fillStyle="rgba(244,65,205,1)",ctx.fillRect(cWidth-75,45,15,3),txList=await tangle.find({$and:[filterForValueTX?{value:{$ne:0}}:{},filterForSpecificAddresses.length>0?{address:{$nin:filterForSpecificAddresses}}:{}]},{sort:"receivedAt"});const pxlConstructor=(px,pixelIndex)=>{let strokeOffset=0;const confRateRange=2*txPerLine;if(pixelIndex%confRateRange==0){const step=pixelIndex/confRateRange;ctx.font="11px Consolas",ctx.fillStyle="#000000",ctx.textBaseline="hanging",ctx.textAlign="right";const confRateRangeList=txList.slice(step*confRateRange,step*confRateRange+confRateRange),totalRangeTxAmount=confRateRangeList.length,confirmedRangeTxAmount=confRateRangeList.filter(tx=>!1!==tx.confirmed).length,unconfirmedRangeTxAmount=totalRangeTxAmount-confirmedRangeTxAmount,confRate=Math.round(confirmedRangeTxAmount/(confirmedRangeTxAmount+unconfirmedRangeTxAmount)*100),tps=Math.round(2*txPerLine/(timer[step+1]/1e3-timer[step]/1e3)*10)/10;ctx.fillText((isNaN(confRate)?"0":confRate)+"%"+(isNaN(tps)?" [...]":" ["+tps.toFixed(1)+" TPS]"),105,px.y+75+5)}let pxColor=pxColorUnconf,strokeCol="#cccccc";if(!1!==px.confirmed&&void 0!==px.confirmed||(strokeCol="#cccccc",(pxColor=pxColorUnconf).a=1),"f"===px.milestone&&!0===px.reattached&&(strokeCol="#cccccc",(pxColor=pxColorReattach).a=1),!0===px.confirmed&&"f"===px.milestone&&(strokeCol="#cccccc",(pxColor=pxColorConf).a=1),"m"===px.milestone){ctx.fillStyle="rgba(255, 255, 255, 1)",ctx.fillRect(110+cWidth+5,px.y+75,100,10),ctx.font="11px Consolas",ctx.fillStyle="#000000",ctx.textBaseline="hanging",ctx.textAlign="left",pxColor=pxColorMilestone,strokeCol="#cccccc";const minElapsed=Math.floor((parseInt(Date.now())-px.receivedAt)/1e3/60);ctx.fillText(`${minElapsed} min`,110+cWidth+5,px.y+75),pxColor.a=1}"t"===px.milestone&&(strokeCol="#cccccc",(pxColor=pxColorMilestone).a=1),px.address===selectedAddress&&(strokeCol="#ff0000",strokeOffset=1,pxColor.a=1),pixelIndex===effectiveConfRateIndex&&(ctx.fillStyle="rgba(244,65,205,1)",ctx.fillRect(110+cWidth+5,px.y+75-1,15,3)),ctx.fillStyle="rgba("+pxColor.r+","+pxColor.g+","+pxColor.b+","+pxColor.a+")",ctx.fillRect(px.x+110,px.y+75,10,10),ctx.strokeStyle=strokeCol,ctx.lineWidth=1,ctx.strokeRect(px.x+110,px.y+75,10-strokeOffset,10-strokeOffset)};txList.map((tx,i)=>{const lineCount=calcLineCount(i,10,cWidth),pxl={x:10*i-10*lineCount*txPerLine,y:10*lineCount,hash:tx.hash,bundle:tx.bundle,address:tx.address,value:tx.value,tag:tx.tag,confirmed:tx.confirmed,reattached:tx.reattached,receivedAt:tx.receivedAt,ctime:tx.ctime,milestone:tx.milestone};pxls.push(pxl),pxlConstructor(pxl,i)}),pixelMap=pxls;const txListInitialized=txList.length>0;params.initial&&txListInitialized&&CalcToplist(!0),params.loop&&window.setTimeout(()=>drawGraph({loop:!0,initial:!txListInitialized}),1e3)},CalcToplist=initial=>{topListCount+=toplistAdditional;let confirmedTotalCount=0,unconfirmedTotalCount=0,metricsPerAddress={},totalAverageCtime=[];txList.map(tx=>{const ctimeDelta=tx.ctime-tx.receivedAt;if(tx.confirmed&&totalAverageCtime.push(ctimeDelta),metricsPerAddress[tx.address]){const confirmed=metricsPerAddress[tx.address].c,unconfirmed=metricsPerAddress[tx.address].u,total=metricsPerAddress[tx.address].t;metricsPerAddress[tx.address].t=total+1,tx.confirmed?(metricsPerAddress[tx.address].c=confirmed+1,metricsPerAddress[tx.address].ct.push(ctimeDelta)):metricsPerAddress[tx.address].u=unconfirmed+1}else metricsPerAddress[tx.address]={c:tx.confirmed?1:0,u:tx.confirmed?0:1,t:1,ct:tx.confirmed?[ctimeDelta]:[]}}),metricsPerAddress=Object.entries(metricsPerAddress),toplistMinTX>1&&(metricsPerAddress=_.filter(metricsPerAddress,address=>address[1].t>=toplistMinTX)),metricsPerAddress=(metricsPerAddress=_.orderBy(metricsPerAddress,listItem=>listItem[1].t,[toplistSortIndex[1]])).slice(0,topListCount);let compiledToplist=[];const confirmationTimeMeanTotal=_.mean(totalAverageCtime)/1e3/60;metricsPerAddress.map(tx=>{const txAddress=tx[0],unconfirmedOnes=tx[1].u,confirmedOnes=tx[1].c;confirmedTotalCount+=confirmedOnes,unconfirmedTotalCount+=unconfirmedOnes;const confirmationTime=tx[1].ct,total=tx[1].t,confirmationTimeMean=_.mean(confirmationTime)/1e3/60,confirmationTimeMeanRatio=confirmationTimeMean/confirmationTimeMeanTotal*100-100,confirmedOnesRatio=confirmedOnes/total*100,unconfirmedOnesRatio=unconfirmedOnes/total*100,confirmRatio=confirmedOnes/total,confirmRatioTotal=confirmedTotalCount/(confirmedTotalCount+unconfirmedTotalCount),confirmationMeanRatio=confirmRatio/confirmRatioTotal*100-100,addressTPS=Math.round(total/((Date.now()-txList[0].receivedAt)/1e3)*100)/100,addressCTPS=Math.round(confirmedOnes/((Date.now()-txList[0].receivedAt)/1e3)*100)/100;compiledToplist.push([[0],txAddress,[total],[confirmedOnes,confirmedOnesRatio],[unconfirmedOnes,unconfirmedOnesRatio],[confirmRatio],[confirmationMeanRatio],[addressTPS],[addressCTPS],[confirmationTimeMean],[confirmationTimeMeanRatio]])}),topList=compiledToplist,compiledToplist.length>0&&document.getElementById("toplist")&&createTable(compiledToplist),initial&&window.setTimeout(()=>CalcToplist(!0),3e4)},CalcMetricsSummary=async()=>{const now=Date.now();if(milestoneMetrics=[],milestoneIntervalList=[],(totalTransactions=txList.length)>=maxTransactions){const multiplicator=Math.floor(totalTransactions/maxTransactions);tangle.remove(filterForValueTX?{value:{$ne:0}}:{},{limit:txPerLine*multiplicator})}let timerTemp=[];txList.map((tx,txNumber)=>{txNumber%(2*txPerLine)==0&&timerTemp.push(tx.receivedAt)}),timer=timerTemp;const totalConfirmationTimeMs=_.meanBy(totalConfirmations,confTimes=>{if(!1===confTimes.milestone)return confTimes.ctime});totalConfirmationTime=_.round(totalConfirmationTimeMs/1e3/60,1),totalConfirmations=txList.reduce((acc,tx)=>(!0===tx.confirmed&&(acc.push({ctime:tx.ctime-tx.receivedAt,milestone:"f"!==tx.milestone,effective:!(tx.receivedAt>now-totalConfirmationTimeMs)}),"m"===tx.milestone&&milestoneMetrics.push(tx.receivedAt)),acc),[]);const totalConfirmationsCountEff=_.countBy(totalConfirmations,"effective").true;milestoneMetrics.map((milestone,iter)=>{iter>0&&milestoneIntervalList.push(milestone-milestoneMetrics[iter-1])}),milestoneInterval=Math.round(_.mean(milestoneIntervalList)/1e3/60*10)/10;const totalConfirmationsCount=totalConfirmations.length,totalUnconfirmedCount=totalTransactions-totalConfirmationsCount;totalConfRate=Math.round(totalConfirmationsCount/(totalConfirmationsCount+totalUnconfirmedCount)*1e4)/100,effectiveConfRateIndex=_.findIndex(txList,o=>o.receivedAt>now-totalConfirmationTimeMs),totalTransactions>0&&(totalTPS=Math.round(totalTransactions/((now-txList[0].receivedAt)/1e3)*100)/100,totalCTPS=Math.round(totalConfirmationsCount/((now-txList[0].receivedAt)/1e3)*100)/100,txList[effectiveConfRateIndex]&&txList[effectiveConfRateIndex].receivedAt&&(totalTPSeff=Math.round(effectiveConfRateIndex/((now-txList[effectiveConfRateIndex].receivedAt)/1e3)*100)/100,totalCTPSeff=Math.round(totalConfirmationsCountEff/((now-txList[effectiveConfRateIndex].receivedAt)/1e3)*100)/100,totalConfRateEff=Math.round(totalCTPSeff/totalTPSeff*1e4)/100)),totalTPS>20&&!endlessMode&&!manualPoll?maxTransactions=3e4:totalTPS<=20&&!endlessMode&&!manualPoll&&(maxTransactions=15e3),window.setTimeout(()=>CalcMetricsSummary(),1500)},Main=()=>{drawGraph({loop:!0,initial:!0}),CalcMetricsSummary(),document.getElementById("loading")&&(document.getElementById("loading").style.display="none"),document.getElementById("loadingTX")&&(document.getElementById("loadingTX").classList.add("hide"),document.getElementById("loadingTX").classList.remove("inline_block"))};ctx&&Main();